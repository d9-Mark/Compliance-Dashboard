-- quick-cve-schema-update.sql
-- Run this to add minimal CVE support to your existing database

BEGIN;

-- Add essential CVE fields to Vulnerability table
ALTER TABLE "public"."Vulnerability" 
ADD COLUMN IF NOT EXISTS "publishedDate" TIMESTAMP(3),
ADD COLUMN IF NOT EXISTS "cvssVersion" TEXT;

-- Add essential CVE tracking fields to EndpointVulnerability table
ALTER TABLE "public"."EndpointVulnerability" 
ADD COLUMN IF NOT EXISTS "sentinelOneId" TEXT,
ADD COLUMN IF NOT EXISTS "daysDetected" INTEGER DEFAULT 0,
ADD COLUMN IF NOT EXISTS "lastScanDate" TIMESTAMP(3),
ADD COLUMN IF NOT EXISTS "applicationName" TEXT,
ADD COLUMN IF NOT EXISTS "applicationVersion" TEXT,
ADD COLUMN IF NOT EXISTS "applicationVendor" TEXT;

-- Add performance indexes for CVE queries
CREATE INDEX IF NOT EXISTS "Vulnerability_publishedDate_idx" ON "public"."Vulnerability"("publishedDate");
CREATE INDEX IF NOT EXISTS "EndpointVulnerability_sentinelOneId_idx" ON "public"."EndpointVulnerability"("sentinelOneId");
CREATE INDEX IF NOT EXISTS "EndpointVulnerability_lastScanDate_idx" ON "public"."EndpointVulnerability"("lastScanDate");
CREATE INDEX IF NOT EXISTS "EndpointVulnerability_applicationName_idx" ON "public"."EndpointVulnerability"("applicationName");
CREATE INDEX IF NOT EXISTS "EndpointVulnerability_daysDetected_idx" ON "public"."EndpointVulnerability"("daysDetected");

-- Add comments for documentation
COMMENT ON COLUMN "public"."Vulnerability"."publishedDate" IS 'Date when the CVE was published';
COMMENT ON COLUMN "public"."Vulnerability"."cvssVersion" IS 'CVSS version used for scoring (e.g., 3.1)';
COMMENT ON COLUMN "public"."EndpointVulnerability"."sentinelOneId" IS 'SentinelOne vulnerability record ID';
COMMENT ON COLUMN "public"."EndpointVulnerability"."daysDetected" IS 'Number of days since first detected';
COMMENT ON COLUMN "public"."EndpointVulnerability"."applicationName" IS 'Vulnerable application name from SentinelOne';

COMMIT;

-- Verify the changes
SELECT 
    column_name, 
    data_type, 
    is_nullable 
FROM information_schema.columns 
WHERE table_name = 'Vulnerability' 
    AND column_name IN ('publishedDate', 'cvssVersion')
ORDER BY column_name;

SELECT 
    column_name, 
    data_type, 
    is_nullable 
FROM information_schema.columns 
WHERE table_name = 'EndpointVulnerability' 
    AND column_name IN ('sentinelOneId', 'daysDetected', 'lastScanDate', 'applicationName', 'applicationVersion', 'applicationVendor')
ORDER BY column_name;